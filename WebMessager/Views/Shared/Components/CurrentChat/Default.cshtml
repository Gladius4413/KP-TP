@model WebMessager.ViewModels.ChatViewModel;


<div>
    <label>Сообщения</label>
    <div id="messageBox">
        @foreach (var mes in Model.Messages)
        {
<div>
    <div>
        <div>
            From @mes.From :
        </div>
        <div>@mes.Text</div>
        <div>@mes.Date</div>
    </div>
    <hr style="border-top: 3px dashed #bbb;">
</div>
        }
    </div>
    <div>
        <input type="text" id="userId" value="@Model.UserId" hidden />
        <input type="text" id="mess" placeholder="Напишите сообщение" />
        <input type="submit" id="sendBtn" value="Отправить" />
    </div>

</div>

<script type="text/javascript">
    function createMessage(message) {
        let messageElem = document.createElement("div");
        messageElem.innerHTML = "<div><div><div>From " + message.from + " : </div><div>" + message.text + "</div><div>" + new Date(message.date).toLocaleString() + "</div></div><hr style = \"border-top: 3px dashed #bbb;\"></div>";

        let messageBox = document.getElementById("messageBox");
        var lastElement = messageBox.lastElementChild;
        lastElement.parentNode.insertBefore(messageElem, lastElement.nextSibling);
    }
    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("/chat")
        .build();

    // получение сообщения от сервера
    hubConnection.on('Receive', function (message) {
        createMessage(message);
    });

    // отправка сообщения на сервер
    document.getElementById("sendBtn").addEventListener("click", function (e) {
        let userId = document.getElementById("userId");
        let getMess = document.getElementById("mess");
        let mess = { text: getMess.value, idFrom: 0, idTo: Number(userId.value), date: null };
        try {
            hubConnection.invoke('Send', mess);
            getMess.value = "";
        }
        catch (err) {
            console.error(err);
        }
    });

    hubConnection.start();


</script>